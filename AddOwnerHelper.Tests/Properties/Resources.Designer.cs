//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AddOwnerHelper.Tests.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AddOwnerHelper.Tests.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         /// &lt;summary&gt;
        ///        /// Identifies the &lt;see cref=&quot;P:MyControl.Stretch&quot; /&gt; dependency property. 
        ///        /// &lt;/summary&gt;
        ///        /// &lt;returns&gt;
        ///        /// The identifier for the &lt;see cref=&quot;P:MyControl.Stretch&quot; /&gt; dependency property.
        ///        /// &lt;/returns&gt;
        ///        public static readonly DependencyProperty StretchProperty = Shape.StretchProperty.AddOwner(
        ///            typeof(MyControl),
        ///            new FrameworkPropertyMetadata(
        ///                Stretch.None,
        ///                FrameworkProperty [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AddOwnerShapeStretchField {
            get {
                return ResourceManager.GetString("AddOwnerShapeStretchField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         /// &lt;summary&gt;
        ///        /// Gets or sets a &lt;see cref=&quot;T:System.Windows.Media.Stretch&quot; /&gt; enumeration value that describes how the shape fills its allocated space.
        ///        /// &lt;/summary&gt;
        ///        /// &lt;returns&gt;
        ///        /// One of the &lt;see cref=&quot;T:System.Windows.Media.Stretch&quot; /&gt; enumeration values.
        ///        /// &lt;/returns&gt;
        ///        public Stretch Stretch
        ///        {
        ///            get { return (Stretch)GetValue(StretchProperty); }
        ///            set { SetValue(StretchProperty, value); }
        ///        }.
        /// </summary>
        internal static string AddOwnerShapeStretchProperty {
            get {
                return ResourceManager.GetString("AddOwnerShapeStretchProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         /// &lt;summary&gt;
        ///        /// DependencyProperty for the Stretch property.
        ///        /// &lt;/summary&gt;
        ///        public static readonly DependencyProperty StretchProperty = Shape.StretchProperty.AddOwner(
        ///            typeof(MyControl),
        ///            new FrameworkPropertyMetadata(
        ///                Stretch.None,
        ///                FrameworkPropertyMetadataOptions.AffectsMeasure | FrameworkPropertyMetadataOptions.AffectsArrange));
        ///
        ///        /// &lt;summary&gt;
        ///        /// The Stretch property determines how the shap [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AddOwnerStretch {
            get {
                return ResourceManager.GetString("AddOwnerStretch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         /// &lt;summary&gt;
        ///        /// Identifies the &lt;see cref=&quot;P:MyControl.IsReadOnly&quot; /&gt; dependency property. 
        ///        /// &lt;/summary&gt;
        ///        /// &lt;returns&gt;
        ///        /// The identifier for the &lt;see cref=&quot;P:MyControl.IsReadOnly&quot; /&gt; dependency property.
        ///        /// &lt;/returns&gt;
        ///        public static readonly DependencyProperty IsReadOnlyProperty = TextBoxBase.IsReadOnlyProperty.AddOwner(
        ///            typeof(MyControl),
        ///            new FrameworkPropertyMetadata(
        ///                false,
        ///                Framew [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AddOwnerTextBoxBaseIsReadOnlyField {
            get {
                return ResourceManager.GetString("AddOwnerTextBoxBaseIsReadOnlyField", resourceCulture);
            }
        }
    }
}
